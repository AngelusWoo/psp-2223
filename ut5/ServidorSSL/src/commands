Ejemplo: ClienteSSL, ServidorSSL. Veremos diferentes versiones de esta aplicacién, la cual envia un mensaje de texto sobre un canal cifrado:
- Version 1: para su ejecución se necesita ejecutar la aplicacion desde la linea de comandos, indicando la ruta del almacén de clave y su clave de acceso.

- Creacion del certificado digital y almacén de certificados:
keytool -genkey -alias servidor -keyalg RSA -keystore AlmacenSrv -storepass 1234567
keytool -genkey -alias cliente -keyalg RSA -keystore AlmacenCli -storepass clavecli

- Exportación de certificado digital para enviarlo al cliente:
keytool -exportcert -alias servidor -keystore AlmacenSrv -storepass 1234567 -file CertificadoServ.cer
keytool -exportcert -alias cliente -keystore AlmacenCli -storepass clavecli -file CertificadoCli.cer

- Envio de certificado al cliente :
keytool -importcert -trustcacerts -alias servidor -file CertificadoServ.cer -keystore CliCertConfianza -storepass 890123
keytool -importcert -trustcacerts -alias cercliente -file CertificadoCli.cer -keystore SrvCertConfianza -storepass cercli


Para ejecutar el programa servidor es necesario indicar el certificado que se utilizará.
Se escribe la siguiente orden desde la línea de comandos, se asuma que el fichero de almacén  de claves se sitúa en el directorio donde se ejecuta el servidor.
Si se localiza en otro directorio habría que indicarlo.
(Por ejemplo /CAPIT5/SSL/srv/AlmacenSrv)
java -Djavax.net.ssl.keyStore=AlmacenSrv -Djavax.net.ssl.keyStorePassword=1234567 [Clase servidor]

Para ejecutar el programa cliente escribimos lo siguiente:
java -Djavax.net.ssl.trustStore=CliCertConfianza -Djavax.net.ssl.trustStorePassword=890123 [Clase cliente]
